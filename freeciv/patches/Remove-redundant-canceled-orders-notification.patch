From 22790f81703869001ea2cc3a25b660ef507cd1f9 Mon Sep 17 00:00:00 2001
From: Sveinung Kvilhaugsvik <sveinung84@users.sourceforge.net>
Date: Mon, 15 Feb 2016 13:41:25 +0100
Subject: [PATCH] Remove redundant canceled orders notification.

To notify the player that the orders for his unit were canceled is redundant
when the last order was canceled because the unit needed an action decision.
The action selection dialog will pop up and notify the player. It didn't
abort the orders for a unit on a mission to some far away objective.

Reported by Marko Lindqvist <cazfi> and Jacob Nevins <jtn>

See bug #24414
---
 server/unithand.c  |  9 ++++++---
 server/unittools.c | 17 +++++++++++++++--
 2 files changed, 21 insertions(+), 5 deletions(-)

diff --git a/server/unithand.c b/server/unithand.c
index dcd4be8..b9e4217 100644
--- a/server/unithand.c
+++ b/server/unithand.c
@@ -3000,9 +3000,9 @@ static bool can_unit_move_to_tile_with_notify(struct unit *punit,
 
 /**************************************************************************
   Will try to move to/attack the tile dest_x,dest_y.  Returns TRUE if this
-  could be done, FALSE if it couldn't for some reason. Even if this
-  returns TRUE, unit may have died upon arrival to new tile.
-  
+  was done, FALSE if it wasn't for some reason. Even if this returns TRUE,
+  the unit may have died upon arrival to new tile.
+
   'igzoc' means ignore ZOC rules - not necessary for igzoc units etc, but
   done in some special cases (moving barbarians out of initial hut).
   Should normally be FALSE.
@@ -3080,6 +3080,8 @@ bool unit_move_handling(struct unit *punit, struct tile *pdesttile,
          * what to do. */
         send_unit_info(player_reply_dest(pplayer), punit);
 
+        /* The move wasn't done because the unit wanted the player to
+         * decide what to do. */
         return FALSE;
       } else if (!may_non_act_move(punit, pcity, pdesttile, igzoc)) {
         /* No action can be done. No regular move can be done. Attack isn't
@@ -3088,6 +3090,7 @@ bool unit_move_handling(struct unit *punit, struct tile *pdesttile,
                                       is_non_attack_unit_tile(pdesttile,
                                                               pplayer));
 
+        /* The move wasn't done because the unit couldn't do anything. */
         return FALSE;
       }
     }
diff --git a/server/unittools.c b/server/unittools.c
index e4e4064..85d0a38 100644
--- a/server/unittools.c
+++ b/server/unittools.c
@@ -4171,8 +4171,21 @@ bool execute_orders(struct unit *punit, const bool fresh)
         /* Movement failed (ZOC, etc.) */
         cancel_orders(punit, "  attempt to move failed.");
 
-        if (!player_is_watching(punit, fresh)) {
-          /* The player may have missed this. Inform him. */
+        if (!player_is_watching(punit, fresh)
+            /* The final move "failed" because the unit needs to ask the
+             * player what action it should take.
+             *
+             * The action decision request notifies the player. Its
+             * location at the unit's last order makes it clear to the
+             * player who the decision is for. ("The Spy I sent to Berlin
+             * has arrived.")
+             *
+             * A notification message is therefore redundant. */
+            && !(last_order
+                 && punit->action_decision_want == ACT_DEC_ACTIVE
+                 && punit->action_decision_tile == dst_tile)) {
+          /* The player may have missed this. No one else will announce it
+           * in a satisfying manner. Inform the player. */
           notify_player(pplayer, unit_tile(punit),
                         E_UNIT_ORDERS, ftc_server,
                         _("Orders for %s aborted because of failed move."),
-- 
2.7.0

