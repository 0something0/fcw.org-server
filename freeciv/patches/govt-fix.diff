Index: server/ruleset.c
===================================================================
--- server/ruleset.c	(revisjon 30)
+++ server/ruleset.c	(arbeidskopi)
@@ -3607,10 +3607,10 @@
     gov.id = government_number(g);
 
     j = 0;
-    requirement_vector_iterate(&g->reqs, preq) {
+    /*requirement_vector_iterate(&g->reqs, preq) {
       gov.reqs[j++] = *preq;
     } requirement_vector_iterate_end;
-    gov.reqs_count = j;
+    gov.reqs_count = j;*/
 
     gov.num_ruler_titles = g->num_ruler_titles;
 
Index: common/packets.def
===================================================================
--- common/packets.def	(revisjon 72)
+++ common/packets.def	(arbeidskopi)
@@ -1205,8 +1205,8 @@
 PACKET_RULESET_GOVERNMENT=100;sc,lsend
   GOVERNMENT id;
 
-  UINT8 reqs_count;
-  REQUIREMENT reqs[MAX_NUM_REQS:reqs_count];
+  #UINT8 reqs_count;
+  #REQUIREMENT reqs[MAX_NUM_REQS:reqs_count];
 
   UINT8 num_ruler_titles;
        
Index: common/packets_gen.c
===================================================================
--- common/packets_gen.c	(revisjon 72)
+++ common/packets_gen.c	(arbeidskopi)
@@ -13573,24 +13573,6 @@
     int readin;
   
     dio_get_uint8(&din, &readin);
-    real_packet->reqs_count = readin;
-  }
-  
-  {
-    int i;
-  
-    if(real_packet->reqs_count > MAX_NUM_REQS) {
-      freelog(LOG_ERROR, "packets_gen.c: WARNING: truncation array");
-      real_packet->reqs_count = MAX_NUM_REQS;
-    }
-    for (i = 0; i < real_packet->reqs_count; i++) {
-      dio_get_requirement(&din, &real_packet->reqs[i]);
-    }
-  }
-  {
-    int readin;
-  
-    dio_get_uint8(&din, &readin);
     real_packet->num_ruler_titles = readin;
   }
   dio_get_string(&din, real_packet->name, sizeof(real_packet->name));
@@ -13607,15 +13589,6 @@
   SEND_PACKET_START(PACKET_RULESET_GOVERNMENT);
 
   dio_put_uint8(&dout, real_packet->id);
-  dio_put_uint8(&dout, real_packet->reqs_count);
-
-    {
-      int i;
-
-      for (i = 0; i < real_packet->reqs_count; i++) {
-        dio_put_requirement(&dout, &real_packet->reqs[i]);
-      }
-    } 
   dio_put_uint8(&dout, real_packet->num_ruler_titles);
   dio_put_string(&dout, real_packet->name);
   dio_put_string(&dout, real_packet->graphic_str);
Index: common/packets_gen.h
===================================================================
--- common/packets_gen.h	(revisjon 48)
+++ common/packets_gen.h	(arbeidskopi)
@@ -885,8 +885,6 @@
 
 struct packet_ruleset_government {
   int id;
-  int reqs_count;
-  struct requirement reqs[MAX_NUM_REQS];
   int num_ruler_titles;
   char name[MAX_LEN_NAME];
   char graphic_str[MAX_LEN_NAME];
Index: client/packhand.c
===================================================================
--- client/packhand.c	(revisjon 30)
+++ client/packhand.c	(arbeidskopi)
@@ -2750,10 +2750,10 @@
 
   gov->item_number = p->id;
 
-  for (j = 0; j < p->reqs_count; j++) {
+  /*for (j = 0; j < p->reqs_count; j++) {
     requirement_vector_append(&gov->reqs, &p->reqs[j]);
   }
-  assert(gov->reqs.size == p->reqs_count);
+  assert(gov->reqs.size == p->reqs_count);*/
 
   gov->num_ruler_titles    = p->num_ruler_titles;
     
