From ad9a3b435772589b78f467fa819e5ab4412721d6 Mon Sep 17 00:00:00 2001
From: sveinung <sveinung@a0f10bec-cc02-0410-94fc-a9cfff90b4cd>
Date: Fri, 27 Nov 2015 09:41:07 +0000
Subject: [PATCH] JSON protocol: encode memory as a JSON array

This replaces sending each memory byte as a separate field with the byte
number added to the original field name.

This changes the JSON network protocol but not the binary protocol.

See patch #6634

git-svn-id: svn://svn.gna.org/svn/freeciv/trunk@30802 a0f10bec-cc02-0410-94fc-a9cfff90b4cd
---
 common/dataio_json.c | 28 ++++++++++++++++------------
 common/dataio_json.h |  4 ++--
 2 files changed, 18 insertions(+), 14 deletions(-)

diff --git a/common/dataio_json.c b/common/dataio_json.c
index 3e2b60b..4b719aa 100644
--- a/common/dataio_json.c
+++ b/common/dataio_json.c
@@ -555,23 +555,26 @@ void dio_put_uint16_vec8_json(struct json_data_out *dout, char *key,
   Send block of memory as byte array
 **************************************************************************/
 void dio_put_memory_json(struct json_data_out *dout, char *key,
-                         const struct plocation* location,
+                         struct plocation* location,
                          const void *value,
                          size_t size)
 {
   int i;
   char fullkey[512];
-  struct plocation ploc;
 
-  /* TODO: Should probably be a JSON array. */
-  ploc = *plocation_field_new(NULL);
+  dio_put_farray_json(dout, key, location, size);
+
+  location->sub_location = plocation_elem_new(0);
 
   for (i = 0; i < size; i++) {
     fc_snprintf(fullkey, sizeof(fullkey), "%s_%d", key, i);
-    ploc.name = fullkey;
+    location->sub_location->number = i;
 
-    dio_put_uint8_json(dout, fullkey, &ploc, ((unsigned char *)value)[i]);
+    dio_put_uint8_json(dout, fullkey, location,
+                       ((unsigned char *)value)[i]);
   }
+
+  FC_FREE(location->sub_location);
 }
 
 /**************************************************************************
@@ -772,28 +775,29 @@ bool dio_get_sint16_json(json_t *json_packet, char *key,
   Receive block of memory as byte array
 **************************************************************************/
 bool dio_get_memory_json(json_t *json_packet, char *key,
-                         const struct plocation* location,
+                         struct plocation* location,
                          void *dest, size_t dest_size)
 {
    int i;
   char fullkey[512];
-  struct plocation ploc;
 
-  /* TODO: Should probably be a JSON array. */
-  ploc = *plocation_field_new(NULL);
+  location->sub_location = plocation_elem_new(0);
 
   for (i = 0; i < dest_size; i++) {
     int val;
 
     fc_snprintf(fullkey, sizeof(fullkey), "%s_%d", key, i);
-    ploc.name = fullkey;
+    location->sub_location->number = i;
 
-    if (!dio_get_uint8_json(json_packet, fullkey, &ploc, &val)) {
+    if (!dio_get_uint8_json(json_packet, fullkey, location, &val)) {
+      free(location->sub_location);
       return FALSE;
     }
     ((unsigned char *)dest)[i] = val;
   }
 
+  FC_FREE(location->sub_location);
+
   return TRUE;
 }
 
diff --git a/common/dataio_json.h b/common/dataio_json.h
index 240e310..fa8c92c 100644
--- a/common/dataio_json.h
+++ b/common/dataio_json.h
@@ -72,7 +72,7 @@ bool dio_get_sfloat_json(json_t *json_packet, char *key,
                          const struct plocation* location,
                          float *dest, int float_factor);
 bool dio_get_memory_json(json_t *json_packet, char *key,
-                         const struct plocation* location,
+                         struct plocation* location,
                          void *dest, size_t dest_size);
 bool dio_get_string_json(json_t *json_packet, char *key,
                          const struct plocation* location,
@@ -140,7 +140,7 @@ void dio_put_sfloat_json(struct json_data_out *dout, char *key,
                          float value, int float_factor);
 
 void dio_put_memory_json(struct json_data_out *dout, char *key,
-                         const struct plocation* location,
+                         struct plocation* location,
                          const void *value, size_t size);
 void dio_put_string_json(struct json_data_out *dout, char *key,
                          const struct plocation* location,
-- 
2.1.4

