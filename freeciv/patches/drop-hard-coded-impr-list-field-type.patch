From e4b5924f4b26665d919529f2906dfc6990641733 Mon Sep 17 00:00:00 2001
From: Sveinung Kvilhaugsvik <sveinung84@users.sourceforge.net>
Date: Tue, 24 Apr 2018 00:29:28 +0200
Subject: [PATCH 4/4] protocol: drop hard coded impr list field type.

The Freeciv protocol has had building_list, a custom network protocol field
type for transferring lists of city improvemetns (building). It has no JSON
implementation. Freeciv-web patches out all its users.

Replace the building_list field type with arrays of IMPROVEMENT. This keeps
the type information intact. It uses the same amount of space in the binary
protocol. It gives us a JSON implementation.

See hrm Feature #748929
---
 client/packhand.c               | 12 ++++++++++--
 common/generate_packets.py      |  6 +-----
 common/networking/dataio_json.c | 32 --------------------------------
 common/networking/dataio_json.h |  6 ------
 common/networking/dataio_raw.c  | 41 -----------------------------------------
 common/networking/dataio_raw.h  |  3 ---
 common/networking/packets.def   |  7 ++++---
 fc_version                      |  2 +-
 server/ruleset.c                | 20 +++++++++++++++-----
 9 files changed, 31 insertions(+), 98 deletions(-)

diff --git a/common/networking/packets.def b/common/networking/packets.def
index afcd6d3207..73d864b7b5 100644
--- a/common/networking/packets.def
+++ b/common/networking/packets.def
@@ -203,7 +203,6 @@ type STRING             = string(char)
 # Marking it this way is useful as documentation. The marking can also be
 # used in non vanilla generate_packets.py packet generators.
 type STRVEC             = STRING
-type BUILDING_LIST      = building_list(int)
 type WORKLIST           = worklist(struct worklist)
 # string that is URI encoded in the JSON protocol
 type ESTRING            = estring(char)
@@ -1389,7 +1388,8 @@ PACKET_RULESET_GAME = 141; sc, lsend
 
   UINT8 global_init_techs_count;
   TECH global_init_techs[MAX_NUM_TECH_LIST:global_init_techs_count];
-  BUILDING_LIST global_init_buildings[MAX_NUM_BUILDING_LIST];
+  UINT8 global_init_buildings_count;
+  IMPROVEMENT global_init_buildings[MAX_NUM_BUILDING_LIST:global_init_buildings_count];
 
   UINT8 veteran_levels;
   STRING veteran_name[MAX_VET_LEVELS:veteran_levels][MAX_LEN_NAME];
@@ -1533,7 +1533,8 @@ PACKET_RULESET_NATION = 148; sc, lsend
   TECH init_techs[MAX_NUM_TECH_LIST:init_techs_count];
   UINT8 init_units_count;
   UNIT_TYPE init_units[MAX_NUM_UNIT_LIST:init_units_count];
-  BUILDING_LIST init_buildings[MAX_NUM_BUILDING_LIST];
+  UINT8 init_buildings_count;
+  IMPROVEMENT init_buildings[MAX_NUM_BUILDING_LIST:init_buildings_count];
 end
 
 # Separate from PACKET_RULESET_NATION since it can change in pregame
diff --git a/server/ruleset.c b/server/ruleset.c
index ef8a195f7f..5fb914676a 100644
--- a/server/ruleset.c
+++ b/server/ruleset.c
@@ -7777,9 +7777,14 @@ static void send_ruleset_nations(struct conn_list *dest)
     fc_assert(ARRAY_SIZE(packet.init_buildings)
               == ARRAY_SIZE(n->init_buildings));
     for (i = 0; i < MAX_NUM_BUILDING_LIST; i++) {
-      /* Impr_type_id to int */
-      packet.init_buildings[i] = n->init_buildings[i];
+      if (n->init_buildings[i] != B_LAST) {
+        /* Impr_type_id to int */
+        packet.init_buildings[i] = n->init_buildings[i];
+      } else {
+        break;
+      }
     }
+    packet.init_buildings_count = i;
 
     lsend_packet_ruleset_nation(dest, &packet);
   } nations_iterate_end;
@@ -7931,10 +7936,15 @@ static void send_ruleset_game(struct conn_list *dest)
   fc_assert(ARRAY_SIZE(misc_p.global_init_buildings)
             == ARRAY_SIZE(game.rgame.global_init_buildings));
   for (i = 0; i < MAX_NUM_BUILDING_LIST; i++) {
-    /* Impr_type_id to int */
-    misc_p.global_init_buildings[i] =
-      game.rgame.global_init_buildings[i];
+    if (game.rgame.global_init_buildings[i] != B_LAST) {
+      /* Impr_type_id to int */
+      misc_p.global_init_buildings[i] =
+          game.rgame.global_init_buildings[i];
+    } else {
+      break;
+    }
   }
+  misc_p.global_init_buildings_count = i;
 
   misc_p.default_specialist = DEFAULT_SPECIALIST;
 
-- 
2.11.0

