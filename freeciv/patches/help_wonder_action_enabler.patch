diff --git a/ai/default/aicity.c b/ai/default/aicity.c
index f7f4a9b..50fa43b 100644
--- a/ai/default/aicity.c
+++ b/ai/default/aicity.c
@@ -1056,6 +1056,7 @@ static int action_target_neg_util(int action_id,
 
   /* Good for the ciy owner in most cases. */
   case ACTION_TRADE_ROUTE:
+  case ACTION_HELP_WONDER:
     /* TODO: Individual and well balanced values */
     return -1;
   }
diff --git a/ai/default/aiunit.c b/ai/default/aiunit.c
index 2f58807..ca75f92 100644
--- a/ai/default/aiunit.c
+++ b/ai/default/aiunit.c
@@ -1931,7 +1931,8 @@ static void dai_caravan_goto(struct ai_type *ait, struct player *pplayer,
                punit->id,
                TILE_XY(unit_tile(punit)),
                city_name(dest_city));
-      handle_unit_help_build_wonder(pplayer, punit->id, dest_city->id);
+      handle_unit_do_action(pplayer, punit->id, dest_city->id,
+                            0, ACTION_HELP_WONDER);
     } else {
       log_base(LOG_CARAVAN, "%s %s[%d](%d,%d) creates trade route in %s",
                nation_rule_name(nation_of_unit(punit)),
diff --git a/client/control.c b/client/control.c
index e4a9889..0d9ef01 100644
--- a/client/control.c
+++ b/client/control.c
@@ -895,65 +895,6 @@ void set_units_in_combat(struct unit *pattacker, struct unit *pdefender)
 }
 
 /**************************************************************************
-  Add punit to queue of caravan arrivals, and popup a window for the
-  next arrival in the queue, if there is not already a popup, and
-  re-checking that a popup is appropriate.
-  If punit is NULL, just do for the next arrival in the queue.
-**************************************************************************/
-void process_caravan_arrival(struct unit *punit)
-{
-  if (NULL == caravan_arrival_queue) {
-    /* Can happen when the user left a game. */
-    return;
-  }
-
-  if (NULL != punit) {
-    genlist_prepend(caravan_arrival_queue, FC_INT_TO_PTR(punit->id));
-  }
-
-  /* There can only be one dialog at a time: */
-  if (have_asked_server_for_actions
-      || action_selection_actor_unit() != IDENTITY_NUMBER_ZERO) {
-    return;
-  }
-
-  while (0 < genlist_size(caravan_arrival_queue)) {
-    void *data;
-
-    data = genlist_get(caravan_arrival_queue, 0);
-    genlist_remove(caravan_arrival_queue, data);
-    punit = game_unit_by_number(FC_PTR_TO_INT(data));
-
-    if (punit && unit_can_help_build_wonder_here(punit)
-        && (NULL == client.conn.playing
-            || (unit_owner(punit) == client.conn.playing
-                && !client.conn.playing->ai_controlled))) {
-      struct city *pcity_dest = tile_city(unit_tile(punit));
-      struct city *pcity_homecity = game_city_by_number(punit->homecity);
-
-      if (pcity_dest && pcity_homecity) {
-        action_probability probabilities[ACTION_COUNT];
-
-        /* Caravan actions don't use action enablers yet. */
-        action_iterate(act) {
-          probabilities[act] = ACTPROB_IMPOSSIBLE;
-        } action_iterate_end;
-
-        popup_action_selection(punit, pcity_dest, NULL,
-                               city_tile(pcity_dest),
-                               probabilities);
-
-        return;
-      }
-    }
-  }
-
-  /* No more caravan action selections. Look in the other action selection
-   * queues. */
-  choose_action_queue_next();
-}
-
-/**************************************************************************
   Move along the queue of units that need player input about what action
   to take.
 **************************************************************************/
@@ -966,11 +907,6 @@ void choose_action_queue_next(void)
     process_diplomat_arrival(NULL, ACTION_CHOOSE_NEXT);
     return;
   }
-
-  if (caravan_arrival_queue && 0 < genlist_size(caravan_arrival_queue)) {
-    process_caravan_arrival(NULL);
-    return;
-  }
 }
 
 /**************************************************************************
@@ -1742,7 +1678,8 @@ void request_unit_unload(struct unit *pcargo)
   Send request to do caravan action - establishing traderoute or
   helping in wonder building - to server.
 **************************************************************************/
-void request_unit_caravan_action(struct unit *punit, enum packet_type action)
+void request_unit_caravan_action(struct unit *punit,
+                                 enum gen_action action)
 {
   struct city *target_city;
 
@@ -1750,15 +1687,12 @@ void request_unit_caravan_action(struct unit *punit, enum packet_type action)
     return;
   }
 
-  /* FIXME: Change the type of action to gen_action when Help Build Wonder
-   * becomes action enabler controlled. */
-  if (action == PACKET_UNIT_DO_ACTION) {
+  if (action == ACTION_TRADE_ROUTE) {
     request_do_action(ACTION_TRADE_ROUTE, punit->id,
                       target_city->id, 0);
-  } else if (action == PACKET_UNIT_HELP_BUILD_WONDER) {
-    dsend_packet_unit_help_build_wonder(&client.conn,
-                                        punit->id,
-                                        tile_city(unit_tile(punit))->id);
+  } else if (action == ACTION_HELP_WONDER) {
+    request_do_action(ACTION_HELP_WONDER, punit->id,
+                      target_city->id, 0);
   } else {
     log_error("request_unit_caravan_action() Bad action (%d)", action);
   }
@@ -2809,7 +2743,7 @@ void key_unit_build_wonder(void)
 {
   unit_list_iterate(get_units_in_focus(), punit) {
     if (unit_has_type_flag(punit, UTYF_HELP_WONDER)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_HELP_BUILD_WONDER);
+      request_unit_caravan_action(punit, ACTION_HELP_WONDER);
     }
   } unit_list_iterate_end;
 }
@@ -2886,7 +2820,7 @@ void key_unit_trade_route(void)
 {
   unit_list_iterate(get_units_in_focus(), punit) {
     if (unit_has_type_flag(punit, UTYF_TRADE_ROUTE)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_DO_ACTION);
+      request_unit_caravan_action(punit, ACTION_TRADE_ROUTE);
     }
   } unit_list_iterate_end;
 }
diff --git a/client/control.h b/client/control.h
index caf90a2..f532856 100644
--- a/client/control.h
+++ b/client/control.h
@@ -81,7 +81,7 @@ void request_unit_load(struct unit *pcargo, struct unit *ptransporter);
 void request_unit_unload(struct unit *pcargo);
 void request_unit_autosettlers(const struct unit *punit);
 void request_unit_build_city(struct unit *punit);
-void request_unit_caravan_action(struct unit *punit, enum packet_type action);
+void request_unit_caravan_action(struct unit *punit, enum gen_action action);
 void request_unit_change_homecity(struct unit *punit);
 void request_unit_connect(enum unit_activity activity,
                           struct extra_type *tgt);
@@ -179,7 +179,6 @@ void set_units_in_combat(struct unit *pattacker, struct unit *pdefender);
 double blink_active_unit(void);
 double blink_turn_done_button(void);
 
-void process_caravan_arrival(struct unit *punit);
 void choose_action_queue_next(void);
 void process_diplomat_arrival(struct unit *pdiplomat, int target_tile_id);
 
diff --git a/client/gui-gtk-2.0/action_dialog.c b/client/gui-gtk-2.0/action_dialog.c
index 395f42a..36c8286 100644
--- a/client/gui-gtk-2.0/action_dialog.c
+++ b/client/gui-gtk-2.0/action_dialog.c
@@ -162,10 +162,13 @@ static void caravan_help_build_wonder_callback(GtkWidget *w, gpointer data)
 {
   struct action_data *args = (struct action_data *)data;
 
-  dsend_packet_unit_help_build_wonder(&client.conn,
-                                      args->actor_unit_id,
-                                      args->target_city_id);
+  if (NULL != game_unit_by_number(args->actor_unit_id)
+      && NULL != game_city_by_number(args->target_city_id)) {
+    request_do_action(ACTION_HELP_WONDER, args->actor_unit_id,
+                      args->target_city_id, 0);
+  }
 
+  gtk_widget_destroy(act_sel_dialog);
   free(args);
 }
 
diff --git a/client/gui-gtk-2.0/menu.c b/client/gui-gtk-2.0/menu.c
index 4c653cd..69730d6 100644
--- a/client/gui-gtk-2.0/menu.c
+++ b/client/gui-gtk-2.0/menu.c
@@ -1053,7 +1053,7 @@ static void build_city_callback(GtkAction *action, gpointer data)
     if (unit_can_add_or_build_city(punit)) {
       request_unit_build_city(punit);
     } else if (unit_has_type_flag(punit, UTYF_HELP_WONDER)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_HELP_BUILD_WONDER);
+      request_unit_caravan_action(punit, ACTION_HELP_WONDER);
     }
   } unit_list_iterate_end;
 }
@@ -1095,7 +1095,7 @@ static void build_road_callback(GtkAction *action, gpointer data)
     }
 
     if (!building_road && unit_can_est_trade_route_here(punit)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_DO_ACTION);
+      request_unit_caravan_action(punit, ACTION_TRADE_ROUTE);
     }
   } unit_list_iterate_end;
 }
diff --git a/client/gui-gtk-3.0/action_dialog.c b/client/gui-gtk-3.0/action_dialog.c
index 60704ed..61116b4 100644
--- a/client/gui-gtk-3.0/action_dialog.c
+++ b/client/gui-gtk-3.0/action_dialog.c
@@ -162,10 +162,13 @@ static void caravan_help_build_wonder_callback(GtkWidget *w, gpointer data)
 {
   struct action_data *args = (struct action_data *)data;
 
-  dsend_packet_unit_help_build_wonder(&client.conn,
-                                      args->actor_unit_id,
-                                      args->target_city_id);
+  if (NULL != game_unit_by_number(args->actor_unit_id)
+      && NULL != game_city_by_number(args->target_city_id)) {
+    request_do_action(ACTION_HELP_WONDER, args->actor_unit_id,
+                      args->target_city_id, 0);
+  }
 
+  gtk_widget_destroy(act_sel_dialog);
   free(args);
 }
 
diff --git a/client/gui-gtk-3.0/menu.c b/client/gui-gtk-3.0/menu.c
index 16a3e4d..f15fe08 100644
--- a/client/gui-gtk-3.0/menu.c
+++ b/client/gui-gtk-3.0/menu.c
@@ -1053,7 +1053,7 @@ static void build_city_callback(GtkAction *action, gpointer data)
     if (unit_can_add_or_build_city(punit)) {
       request_unit_build_city(punit);
     } else if (unit_has_type_flag(punit, UTYF_HELP_WONDER)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_HELP_BUILD_WONDER);
+      request_unit_caravan_action(punit, ACTION_HELP_WONDER);
     }
   } unit_list_iterate_end;
 }
@@ -1095,7 +1095,7 @@ static void build_road_callback(GtkAction *action, gpointer data)
     }
 
     if (!building_road && unit_can_est_trade_route_here(punit)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_DO_ACTION);
+      request_unit_caravan_action(punit, ACTION_TRADE_ROUTE);
     }
   } unit_list_iterate_end;
 }
diff --git a/client/gui-qt/dialogs.cpp b/client/gui-qt/dialogs.cpp
index 0c3b331..76e5bbd 100644
--- a/client/gui-qt/dialogs.cpp
+++ b/client/gui-qt/dialogs.cpp
@@ -52,8 +52,7 @@
 /* Locations for non action enabler controlled buttons. */
 #define BUTTON_MOVE ACTION_MOVE
 #define BUTTON_CANCEL BUTTON_MOVE + 1
-#define BUTTON_HELP_WONDER BUTTON_MOVE + 2
-#define BUTTON_COUNT BUTTON_MOVE + 3
+#define BUTTON_COUNT BUTTON_MOVE + 2
 
 static void diplomat_keep_moving(QVariant data1, QVariant data2);
 static void diplomat_incite(QVariant data1, QVariant data2);
@@ -106,6 +105,7 @@ static const QHash<enum gen_action, pfcn_void> af_map_init(void)
   action_function[ACTION_SPY_INCITE_CITY] = diplomat_incite;
   action_function[ACTION_TRADE_ROUTE] = caravan_establish_trade;
   action_function[ACTION_MARKETPLACE] = caravan_marketplace;
+  action_function[ACTION_HELP_WONDER] = caravan_help_build;
 
   /* Unit acting against a unit target. */
   action_function[ACTION_SPY_BRIBE_UNIT] = diplomat_bribe;
@@ -1156,10 +1156,14 @@ static void caravan_establish_trade(QVariant data1, QVariant data2)
 ***************************************************************************/
 static void caravan_help_build(QVariant data1, QVariant data2)
 {
-  dsend_packet_unit_help_build_wonder(&client.conn,
-                                      data1.toInt(), data2.toInt());
+  int caravan_id = data1.toInt();
+  int caravan_target_id = data2.toInt();
 
-  process_caravan_arrival(NULL);
+  if (NULL != game_unit_by_number(caravan_id)
+      && NULL != game_city_by_number(caravan_target_id)) {
+    request_do_action(ACTION_HELP_WONDER,
+                      caravan_id, caravan_target_id, 0);
+  }
 }
 
 /***************************************************************************
@@ -1230,8 +1234,6 @@ void popup_action_selection(struct unit *actor_unit,
   pfcn_void func;
   struct city *actor_homecity;
 
-  bool can_wonder;
-
   /* Could be caused by the server failing to reply to a request for more
    * information or a bug in the client code. */
   fc_assert_msg(!is_more_user_input_needed,
@@ -1242,10 +1244,6 @@ void popup_action_selection(struct unit *actor_unit,
 
   actor_homecity = game_city_by_number(actor_unit->homecity);
 
-  can_wonder = unit_has_type_flag(actor_unit, UTYF_HELP_WONDER)
-      && target_city
-      && unit_can_help_build_wonder(actor_unit, target_city);
-
   astr_set(&title,
            /* TRANS: %s is a unit name, e.g., Spy */
            _("Choose Your %s's Strategy"),
@@ -1359,13 +1357,10 @@ void popup_action_selection(struct unit *actor_unit,
                act_probs,
                qv1, qv2);
 
-  if (can_wonder) {
-    QString title;
-
-    title = label_help_wonder_rem(target_city);
-    func = caravan_help_build;
-    cd->add_item(title, func, qv1, qv2, "", BUTTON_HELP_WONDER);
-  }
+  action_entry(cd,
+               ACTION_HELP_WONDER,
+               act_probs,
+               qv1, qv2);
 
   /* Spy/Diplomat acting against a unit */
 
@@ -2197,7 +2192,7 @@ void caravan_dialog_update(void)
   can_wonder = destcity && caravan
                && unit_can_help_build_wonder(caravan, destcity);
 
-  help_wonder_button = asd->get_identified_button(BUTTON_HELP_WONDER);
+  help_wonder_button = asd->get_identified_button(ACTION_HELP_WONDER);
 
   if (help_wonder_button != NULL) {
     if (can_wonder) {
@@ -2223,7 +2218,7 @@ void caravan_dialog_update(void)
     title = label_help_wonder_rem(destcity);
     asd->add_item(title, caravan_help_build,
                   caravan->id, destcity->id,
-                  "", BUTTON_HELP_WONDER);
+                  "", ACTION_HELP_WONDER);
 
     if (keep_moving_button != NULL) {
       /* Reinsert the "Keep moving" button below the
diff --git a/client/gui-qt/menu.cpp b/client/gui-qt/menu.cpp
index 5380900..cf6ff32 100644
--- a/client/gui-qt/menu.cpp
+++ b/client/gui-qt/menu.cpp
@@ -1246,7 +1246,7 @@ void mr_menu::slot_build_city()
     if (unit_can_add_or_build_city(punit)) {
       request_unit_build_city(punit);
     } else if (unit_has_type_flag(punit, UTYF_HELP_WONDER)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_HELP_BUILD_WONDER);
+      request_unit_caravan_action(punit, ACTION_HELP_WONDER);
     }
   } unit_list_iterate_end;
 }
@@ -1405,7 +1405,7 @@ void mr_menu::slot_build_road()
     }
 
     if (!building_road && unit_can_est_trade_route_here(punit)) {
-      request_unit_caravan_action(punit, PACKET_UNIT_DO_ACTION);
+      request_unit_caravan_action(punit, ACTION_TRADE_ROUTE);
     }
   } unit_list_iterate_end;
 }
diff --git a/client/gui-sdl/action_dialog.c b/client/gui-sdl/action_dialog.c
index be378f5..1cbcef0 100644
--- a/client/gui-sdl/action_dialog.c
+++ b/client/gui-sdl/action_dialog.c
@@ -122,12 +122,19 @@ static int caravan_establish_trade_callback(struct widget *pWidget)
 static int caravan_help_build_wonder_callback(struct widget *pWidget)
 {
   if (Main.event.button.button == SDL_BUTTON_LEFT) {
-    dsend_packet_unit_help_build_wonder(&client.conn,
-        pDiplomat_Dlg->actor_unit_id, pDiplomat_Dlg->target_ids[ATK_CITY]);
+    if (NULL != game_city_by_number(
+          pDiplomat_Dlg->target_ids[ATK_CITY])
+        && NULL != game_unit_by_number(pDiplomat_Dlg->actor_unit_id)) {
+      request_do_action(ACTION_HELP_WONDER,
+                        pDiplomat_Dlg->actor_unit_id,
+                        pDiplomat_Dlg->target_ids[ATK_CITY],
+                        0);
+    }
 
     popdown_diplomat_dialog();
     choose_action_queue_next();
   }
+
   return -1;
 }
 
diff --git a/client/gui-sdl2/action_dialog.c b/client/gui-sdl2/action_dialog.c
index fcf2782..d63e3db 100644
--- a/client/gui-sdl2/action_dialog.c
+++ b/client/gui-sdl2/action_dialog.c
@@ -123,8 +123,14 @@ static int caravan_establish_trade_callback(struct widget *pWidget)
 static int caravan_help_build_wonder_callback(struct widget *pWidget)
 {
   if (Main.event.button.button == SDL_BUTTON_LEFT) {
-    dsend_packet_unit_help_build_wonder(&client.conn,
-        pDiplomat_Dlg->actor_unit_id, pDiplomat_Dlg->target_ids[ATK_CITY]);
+    if (NULL != game_city_by_number(
+          pDiplomat_Dlg->target_ids[ATK_CITY])
+        && NULL != game_unit_by_number(pDiplomat_Dlg->actor_unit_id)) {
+      request_do_action(ACTION_HELP_WONDER,
+                        pDiplomat_Dlg->actor_unit_id,
+                        pDiplomat_Dlg->target_ids[ATK_CITY],
+                        0);
+    }
 
     popdown_diplomat_dialog();
     choose_action_queue_next();
diff --git a/client/gui-xaw/action_dialog.c b/client/gui-xaw/action_dialog.c
index 698b132..f52da42 100644
--- a/client/gui-xaw/action_dialog.c
+++ b/client/gui-xaw/action_dialog.c
@@ -116,13 +116,15 @@ static void caravan_help_build_wonder_callback(Widget w,
 					       XtPointer client_data,
 					       XtPointer call_data)
 {
-  dsend_packet_unit_help_build_wonder(&client.conn,
-                                      diplomat_id,
-                                      diplomat_target_id[ATK_CITY]);
-
   destroy_message_dialog(w);
   diplomat_dialog = NULL;
 
+  if (NULL != game_city_by_number(diplomat_target_id[ATK_CITY])
+      && NULL != game_unit_by_number(diplomat_id)) {
+    request_do_action(ACTION_HELP_WONDER, diplomat_id,
+                      diplomat_target_id[ATK_CITY], 0);
+  }
+
   choose_action_queue_next();
 }
 
diff --git a/client/gui-xaw/xaw_actions.c b/client/gui-xaw/xaw_actions.c
index 7f63670..0e5ba65 100644
--- a/client/gui-xaw/xaw_actions.c
+++ b/client/gui-xaw/xaw_actions.c
@@ -442,7 +442,7 @@ static void xaw_key_unit_build_city_or_wonder(Widget w, XEvent *event, String *a
     if (unit_can_add_or_build_city(punit)) {
       request_unit_build_city(punit);
     } else {
-      request_unit_caravan_action(punit, PACKET_UNIT_HELP_BUILD_WONDER);
+      request_unit_caravan_action(punit, ACTION_HELP_WONDER);
     }
   } unit_list_iterate_end;
 }
diff --git a/client/packhand.c b/client/packhand.c
index 40d2d69..b52929f 100644
--- a/client/packhand.c
+++ b/client/packhand.c
@@ -1569,28 +1569,6 @@ static bool handle_unit_packet_common(struct unit *packet_unit)
             && !client_player()->ai_controlled
             && can_client_issue_orders()
             && !unit_has_orders(punit)
-            && unit_can_help_build_wonder_here(punit)) {
-          /* Open caravan dialog only if 'punit' and all its transporters
-           * (recursively) don't have orders. */
-          struct unit *ptrans;
-
-          for (ptrans = unit_transport_get(punit);;
-               ptrans = unit_transport_get(ptrans)) {
-            if (NULL == ptrans) {
-              process_caravan_arrival(punit);
-              break;
-            } else if (unit_has_orders(ptrans)) {
-              break;
-            }
-          }
-        }
-
-        if (options.popup_actor_arrival
-            && client_has_player()
-            && client_player() == unit_owner(punit)
-            && !client_player()->ai_controlled
-            && can_client_issue_orders()
-            && !unit_has_orders(punit)
              /* the server handles non transported units */
             && NULL != unit_transport_get(punit)
             && is_actor_unit(punit)) {
diff --git a/common/actions.c b/common/actions.c
index 97977da..88d63e2 100644
--- a/common/actions.c
+++ b/common/actions.c
@@ -108,6 +108,10 @@ void actions_init(void)
       action_new(ACTION_MARKETPLACE, ATK_CITY,
                  /* TRANS: Enter _Marketplace (100% chance of success). */
                  N_("Enter %sMarketplace%s"));
+  actions[ACTION_HELP_WONDER] =
+      action_new(ACTION_HELP_WONDER, ATK_CITY,
+                 /* TRANS: Help build _Wonder (100% chance of success). */
+                 N_("Help build %sWonder%s"));
 
   /* Initialize the action enabler list */
   action_iterate(act) {
@@ -348,8 +352,9 @@ void action_enabler_append_hard(struct action_enabler *enabler)
                                            FALSE, "Has real embassy"));
   }
 
-  if (enabler->action != ACTION_TRADE_ROUTE &&
-      enabler->action != ACTION_MARKETPLACE) {
+  if (enabler->action != ACTION_TRADE_ROUTE
+      && enabler->action != ACTION_MARKETPLACE
+      && enabler->action != ACTION_HELP_WONDER) {
     /* The Freeciv code assumes that all spy actions have foreign targets.
      * TODO: Move this restriction to the ruleset to prepare for false flag
      * operations. */
@@ -367,6 +372,22 @@ void action_enabler_append_hard(struct action_enabler *enabler)
                               req_from_str("Unitflag", "Local", FALSE,
                                            TRUE, "TradeRoute"));
   }
+
+  if (enabler->action == ACTION_HELP_WONDER) {
+    /* There are still places that assumes that units that can help build a
+     * wonder have the HelpWonder flag. */
+    /* TODO: Move this restriction to the ruleset. */
+    requirement_vector_append(&enabler->actor_reqs,
+                              req_from_str("Unitflag", "Local", FALSE,
+                                           TRUE, "HelpWonder"));
+
+    /* The Freeciv code assumes that it it is impossible to help a foreign
+     * nation build a foreign wonder. */
+    /* TODO: Move this restriction to the ruleset. */
+    requirement_vector_append(&enabler->actor_reqs,
+                              req_from_str("DiplRel", "Local", FALSE,
+                                           FALSE, "Is foreign"));
+  }
 }
 
 /**************************************************************************
@@ -472,6 +493,14 @@ static bool is_action_possible(const enum gen_action wanted_action,
     }
   }
 
+  if (wanted_action == ACTION_HELP_WONDER) {
+    /* This is the traditional test if it is legal to help build the wonder
+     * or not. TODO: Move parts to the ruleset. */
+    if (!unit_can_help_build_wonder(actor_unit, target_city)) {
+      return FALSE;
+    }
+  }
+
   return TRUE;
 }
 
@@ -931,6 +960,9 @@ action_prob(const enum gen_action wanted_action,
   case ACTION_ESTABLISH_EMBASSY:
     chance = 200;
     break;
+  case ACTION_HELP_WONDER:
+    /* TODO */
+    break;
   case ACTION_SPY_STEAL_TECH:
     /* Do the victim have anything worth taking? */
     known = tri_and(known,
diff --git a/common/actions.h b/common/actions.h
index 6829724..7aa8668 100644
--- a/common/actions.h
+++ b/common/actions.h
@@ -65,6 +65,8 @@ extern "C" {
 #define SPECENUM_VALUE11NAME N_("Establish Trade Route")
 #define SPECENUM_VALUE12 ACTION_MARKETPLACE
 #define SPECENUM_VALUE12NAME N_("Enter Marketplace")
+#define SPECENUM_VALUE13 ACTION_HELP_WONDER
+#define SPECENUM_VALUE13NAME N_("Help Wonder")
 #define SPECENUM_COUNT ACTION_COUNT
 #include "specenum_gen.h"
 
diff --git a/common/packets.def b/common/packets.def
index 5881371..e5e9b70 100644
--- a/common/packets.def
+++ b/common/packets.def
@@ -949,11 +949,6 @@ PACKET_UNIT_BATTLEGROUP = 71; cs, dsend
   SINT8 battlegroup;
 end
 
-PACKET_UNIT_HELP_BUILD_WONDER = 72; cs, dsend
-  UNIT unit_id;
-  CITY city_id;
-end
-
 # used for client orders: currently client-side goto and patrol
 PACKET_UNIT_ORDERS = 73; cs
   UNIT unit_id;
diff --git a/data/classic/game.ruleset b/data/classic/game.ruleset
index 7cd2792..8d40d0c 100644
--- a/data/classic/game.ruleset
+++ b/data/classic/game.ruleset
@@ -331,6 +331,9 @@ action = "Establish Trade Route"
 [actionenabler_marketplace]
 action = "Enter Marketplace"
 
+[actionenabler_help_build_wonder]
+action = "Help Wonder"
+
 [borders]
 ; Base border radius from city.
 radius_sq_city = 17
diff --git a/server/diplomats.c b/server/diplomats.c
index 2e59e59..8ab7a22 100644
--- a/server/diplomats.c
+++ b/server/diplomats.c
@@ -1666,6 +1666,7 @@ static void maybe_cause_incident(enum gen_action action,
     case ACTION_SPY_INVESTIGATE_CITY:
     case ACTION_TRADE_ROUTE:
     case ACTION_MARKETPLACE:
+    case ACTION_HELP_WONDER:
       return; /* These are not considered offences */
     }
     player_diplstate_get(victim_player, offender)->has_reason_to_cancel = 2;
diff --git a/server/unithand.c b/server/unithand.c
index f85b047..7f7ef25 100644
--- a/server/unithand.c
+++ b/server/unithand.c
@@ -80,6 +80,9 @@ static bool base_handle_unit_establish_trade(struct player *pplayer,
                                              int unit_id,
                                              struct city *pcity_dest,
                                              bool est_if_able);
+
+static void handle_unit_help_build_wonder(struct player *pplayer,
+                                          int unit_id, int city_id);
 static bool unit_bombard(struct unit *punit, struct tile *ptile);
 
 /**************************************************************************
@@ -751,6 +754,18 @@ void handle_unit_do_action(struct player *pplayer,
       }
     }
     break;
+  case ACTION_HELP_WONDER:
+    if (pcity) {
+      if (is_action_enabled_unit_on_city(action_type,
+                                         actor_unit, pcity)) {
+        ACTION_STARTED_UNIT_CITY(action_type, actor_unit, pcity);
+
+        handle_unit_help_build_wonder(pplayer, actor_unit->id, pcity->id);
+      } else {
+        illegal_action(pplayer, actor_unit, action_type);
+      }
+    }
+    break;
   }
 }
 
@@ -1989,8 +2004,8 @@ bool unit_move_handling(struct unit *punit, struct tile *pdesttile,
 /**************************************************************************
   Handle request to help in wonder building.
 **************************************************************************/
-void handle_unit_help_build_wonder(struct player *pplayer,
-                                   int unit_id, int city_id)
+static void handle_unit_help_build_wonder(struct player *pplayer,
+                                          int unit_id, int city_id)
 {
   const char *text;
   struct city *pcity_dest;
diff --git a/server/unittools.c b/server/unittools.c
index 0682185..093c4c3 100644
--- a/server/unittools.c
+++ b/server/unittools.c
@@ -3886,9 +3886,10 @@ bool execute_orders(struct unit *punit)
         return TRUE;
       }
 
-      handle_unit_help_build_wonder(pplayer,
-                                    unitid,
-                                    tile_city(dst_tile)->id);
+      handle_unit_do_action(pplayer,
+                            unitid,
+                            tile_city(dst_tile)->id,
+                            0, ACTION_HELP_WONDER);
       if (player_unit_by_number(pplayer, unitid)) {
         cancel_orders(punit, "  no wonder city");
         notify_player(pplayer, unit_tile(punit), E_UNIT_ORDERS, ftc_server,
