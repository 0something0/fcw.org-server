diff --git a/common/fc_types.h b/common/fc_types.h
index a61bfa14dd..248b14ccfa 100644
--- a/common/fc_types.h
+++ b/common/fc_types.h
@@ -701,6 +701,7 @@ typedef int server_setting_id;
 #define SPECENUM_VALUE8 EC_RESOURCE
 #define SPECENUM_VALUE8NAME "Resource"
 #define SPECENUM_COUNT EC_COUNT
+#define SPECENUM_BITVECTOR bv_causes
 #include "specenum_gen.h"
 #define EC_NONE EC_COUNT
 #define EC_SPECIAL (EC_NONE + 1)
@@ -722,10 +723,11 @@ FC_STATIC_ASSERT(EC_COUNT < 16, extra_causes_over_limit);
 #define SPECENUM_VALUE3 ERM_DISAPPEARANCE
 #define SPECENUM_VALUE3NAME "Disappear"
 #define SPECENUM_COUNT ERM_COUNT
+#define SPECENUM_BITVECTOR bv_rmcauses
 #include "specenum_gen.h"
 #define ERM_NONE ERM_COUNT
 
-/* packets.def and struct extra_type reserve 8 bits (0-7) for these. */
+/* struct extra_type reserve 8 bits (0-7) for these. */
 FC_STATIC_ASSERT(ERM_COUNT < 8, extra_rmcauses_over_limit);
 
 #define SPECENUM_NAME extra_unit_seen_type
diff --git a/common/networking/packets.def b/common/networking/packets.def
index df184f7c20..792ce40b57 100644
--- a/common/networking/packets.def
+++ b/common/networking/packets.def
@@ -268,6 +268,8 @@ type BV_EXTRAS          = bitvector(bv_extras)
 type BV_BASES           = bitvector(bv_bases)
 type BV_ROADS           = bitvector(bv_roads)
 type BV_ROAD_FLAGS      = bitvector(bv_road_flags)
+type BV_CAUSES          = bitvector(bv_causes)
+type BV_RMCAUSES        = bitvector(bv_rmcauses)
 type BV_CITY_OPTIONS    = bitvector(bv_city_options)
 type BV_IMPR_FLAGS      = bitvector(bv_impr_flags)
 type BV_IMPRS           = bitvector(bv_imprs)
@@ -1653,8 +1655,8 @@ PACKET_RULESET_EXTRA = 232; sc, lsend
   STRING name[MAX_LEN_NAME];
   STRING rule_name[MAX_LEN_NAME];
   UINT8 category;
-  UINT16 causes;
-  UINT8 rmcauses;
+  BV_CAUSES causes;
+  BV_RMCAUSES rmcauses;
   STRING activity_gfx[MAX_LEN_NAME];
   STRING act_gfx_alt[MAX_LEN_NAME];
   STRING act_gfx_alt2[MAX_LEN_NAME];
diff --git a/server/ruleset.c b/server/ruleset.c
index 6454622d30..15eddbf99b 100644
--- a/server/ruleset.c
+++ b/server/ruleset.c
@@ -7276,8 +7276,20 @@ static void send_ruleset_extras(struct conn_list *dest)
     sz_strlcpy(packet.rule_name, rule_name_get(&e->name));
 
     packet.category = e->category;
-    packet.causes = e->causes;
-    packet.rmcauses = e->rmcauses;
+
+    BV_CLR_ALL(packet.causes);
+    for (j = 0; j < EC_COUNT; j++) {
+      if (is_extra_caused_by(e, j)) {
+        BV_SET(packet.causes, j);
+      }
+    }
+
+    BV_CLR_ALL(packet.rmcauses);
+    for (j = 0; j < ERM_COUNT; j++) {
+      if (is_extra_removed_by(e, j)) {
+        BV_SET(packet.rmcauses, j);
+      }
+    }
 
     sz_strlcpy(packet.activity_gfx, e->activity_gfx);
     sz_strlcpy(packet.act_gfx_alt, e->act_gfx_alt);
-- 
2.11.0

