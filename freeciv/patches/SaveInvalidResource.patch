commit e64bc9b96a14f1bd9061153f8ff7bc20d29a939f
Author: sveinung <sveinung@a0f10bec-cc02-0410-94fc-a9cfff90b4cd>
Date:   Tue Mar 22 05:07:40 2016 +0000

    Fix invalid resource saving.
    
    An invalid resource is illegal at a tile's current terrain. It will appear
    if the terrain is changed to something it can exist on.
    
    See bug #24534
    
    git-svn-id: svn://svn.gna.org/svn/freeciv/trunk@32263 a0f10bec-cc02-0410-94fc-a9cfff90b4cd

diff --git a/server/savegame3.c b/server/savegame3.c
index e256dea..7832903 100644
--- a/server/savegame3.c
+++ b/server/savegame3.c
@@ -302,7 +302,8 @@ static void worklist_save(struct section_file *file,
 static void unit_ordering_calc(void);
 static void unit_ordering_apply(void);
 static void sg_extras_set(bv_extras *extras, char ch, struct extra_type **index);
-static char sg_extras_get(bv_extras extras, const int *index);
+static char sg_extras_get(bv_extras extras, struct resource_type *presource,
+                          const int *index);
 static struct resource_type *char2resource(char c);
 static char resource2char(const struct resource_type *presource);
 static char num2char(unsigned int num);
@@ -1108,7 +1109,8 @@ static void sg_extras_set(bv_extras *extras, char ch, struct extra_type **index)
   Extras are packed in four to a character in hex notation. 'index'
   specifies which set of extras are included in this character.
 ****************************************************************************/
-static char sg_extras_get(bv_extras extras, const int *index)
+static char sg_extras_get(bv_extras extras, struct resource_type *presource,
+                          const int *index)
 {
   int i, bin = 0;
 
@@ -1119,7 +1121,13 @@ static char sg_extras_get(bv_extras extras, const int *index)
       break;
     }
 
-    if (BV_ISSET(extras, extra)) {
+    if (BV_ISSET(extras, extra)
+        /* An invalid resource, a resource that can't exist at the tile's
+         * current terrain, isn't in the bit extra vector. Save it so it
+         * can return if the tile's terrain changes to something it can
+         * exits on. */
+        || (extra_by_number(extra)->data.resource != NULL
+            && extra_by_number(extra)->data.resource == presource)) {
       bin |= (1 << i);
     }
   }
@@ -2517,7 +2525,7 @@ static void sg_save_map_tiles_extras(struct savedata *saving)
         mod[l] = 4 * j + l;
       }
     }
-    SAVE_MAP_CHAR(ptile, sg_extras_get(ptile->extras, mod),
+    SAVE_MAP_CHAR(ptile, sg_extras_get(ptile->extras, ptile->resource, mod),
                   saving->file, "map.e%02d_%04d", j);
   } halfbyte_iterate_extras_end;
 }
@@ -6250,7 +6258,9 @@ static void sg_save_player_vision(struct savedata *saving,
     }
 
     SAVE_MAP_CHAR(ptile,
-                  sg_extras_get(map_get_player_tile(ptile, plr)->extras, mod),
+                  sg_extras_get(map_get_player_tile(ptile, plr)->extras,
+                                map_get_player_tile(ptile, plr)->resource,
+                                mod),
                   saving->file, "player%d.map_e%02d_%04d", plrno, j);
   } halfbyte_iterate_extras_end;
 
