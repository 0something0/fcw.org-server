diff --git a/server/commands.c b/server/commands.c
index a0056f0..fa5b656 100644
--- a/server/commands.c
+++ b/server/commands.c
@@ -548,7 +548,7 @@ static struct command commands[] = {
       "all cities and units etc. Use with care!"), NULL,
    CMD_ECHO_ALL, VCF_NONE, 50
   },
-  {"save",	ALLOW_ADMIN,
+  {"save",	ALLOW_CTRL,
    /* TRANS: translate text between <> only */
    N_("save\n"
       "save <file-name>"),
diff --git a/server/srv_main.c b/server/srv_main.c
index 050ae5f..65d2b21 100644
--- a/server/srv_main.c
+++ b/server/srv_main.c
@@ -1429,7 +1429,7 @@ static void end_turn(void)
   Unconditionally save the game, with specified filename.
   Always prints a message: either save ok, or failed.
 **************************************************************************/
-void save_game(const char *orig_filename, const char *save_reason,
+void save_game(const char *username, const char *save_reason,
                bool scenario)
 {
   char filepath[600];
@@ -1437,11 +1437,11 @@ void save_game(const char *orig_filename, const char *save_reason,
   struct section_file *file;
   struct timer *timer_cpu, *timer_user;
 
-  if (!orig_filename) {
-    filepath[0] = '\0';
-    filename = filepath;
+  if (!username) {
+    con_write(C_FAIL, _("Failed saving game. Missing filename."));
+    return;
   } else {
-    sz_strlcpy(filepath, orig_filename);
+    sz_strlcpy(filepath, username);
     if ((filename = strrchr(filepath, '/'))) {
       filename++;
     } else {
@@ -1474,13 +1474,6 @@ void save_game(const char *orig_filename, const char *save_reason,
     }
   }
 
-  /* If orig_filename is NULL or empty, use a generated default name. */
-  if (filename[0] == '\0'){
-    /* manual save */
-    generate_save_name(game.server.save_name, filename,
-                       sizeof(filepath) + filepath - filename, "manual");
-  }
-
   timer_cpu = timer_new(TIMER_CPU, TIMER_ACTIVE);
   timer_start(timer_cpu);
   timer_user = timer_new(TIMER_USER, TIMER_ACTIVE);
diff --git a/server/stdinhand.c b/server/stdinhand.c
index d474d8b..d9e2e24 100644
--- a/server/stdinhand.c
+++ b/server/stdinhand.c
@@ -635,11 +635,6 @@ Save the game, with filename=arg, provided server state is ok.
 **************************************************************************/
 static bool save_command(struct connection *caller, char *arg, bool check)
 {
-  if (is_restricted(caller)) {
-    cmd_reply(CMD_SAVE, caller, C_FAIL,
-              _("You cannot save games manually on this server."));
-    return FALSE;
-  }
   if (!check) {
     save_game(arg, "User request", FALSE);
   }
@@ -4120,6 +4115,18 @@ static bool handle_stdin_input_real(struct connection *caller, char *str,
 
   level = command_level(command_by_number(cmd));
 
+  /* hack for web client: savegames are saved with username as proposed filename. */
+  if (strncmp(game.server.meta_info.type, "pbem", 4) == 0 
+      && cmd == CMD_SAVE && caller) {
+    char pbemfile[200];
+    fc_snprintf(pbemfile, sizeof(pbemfile), "pbem-%s-%u", caller->username, (unsigned)time(NULL));
+    sz_strlcpy(arg, pbemfile);
+  } else if (cmd == CMD_SAVE && caller) {
+    sz_strlcpy(arg, caller->username);
+  }
+
+
+
   if (conn_can_vote(caller, NULL) && level == ALLOW_CTRL
       && conn_get_access(caller) == ALLOW_BASIC && !check
       && !vote_would_pass_immediately(caller, cmd)) {
