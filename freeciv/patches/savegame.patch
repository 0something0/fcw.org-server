diff --git a/server/commands.c b/server/commands.c
index 05f89d6..742f9b9 100644
--- a/server/commands.c
+++ b/server/commands.c
@@ -548,7 +548,7 @@ static struct command commands[] = {
       "all cities and units etc. Use with care!"), NULL,
    CMD_ECHO_ALL, VCF_NONE, 50
   },
-  {"save",	ALLOW_ADMIN,
+  {"save",	ALLOW_CTRL,
    /* TRANS: translate text between <> only */
    N_("save\n"
       "save <file-name>"),
diff --git a/server/savegame.c b/server/savegame.c
index 2a85039..1a81b68 100644
--- a/server/savegame.c
+++ b/server/savegame.c
@@ -130,8 +130,8 @@ void save_game(const char *orig_filename, const char *save_reason,
   stdata->save_compress_level = game.server.save_compress_level;
 
   if (!orig_filename) {
-    stdata->filepath[0] = '\0';
-    filename = stdata->filepath;
+    con_write(C_FAIL, _("Failed saving game. Missing filename."));
+    return;
   } else {
     sz_strlcpy(stdata->filepath, orig_filename);
     if ((filename = strrchr(stdata->filepath, '/'))) {
@@ -167,13 +167,6 @@ void save_game(const char *orig_filename, const char *save_reason,
     }
   }
 
-  /* If orig_filename is NULL or empty, use a generated default name. */
-  if (filename[0] == '\0'){
-    /* manual save */
-    generate_save_name(game.server.save_name, filename,
-                       sizeof(stdata->filepath) + stdata->filepath - filename, "manual");
-  }
-
   timer_cpu = timer_new(TIMER_CPU, TIMER_ACTIVE);
   timer_start(timer_cpu);
   timer_user = timer_new(TIMER_USER, TIMER_ACTIVE);
diff --git a/server/stdinhand.c b/server/stdinhand.c
index 5dc62fa..b9e37df 100644
--- a/server/stdinhand.c
+++ b/server/stdinhand.c
@@ -642,11 +642,6 @@ Save the game, with filename=arg, provided server state is ok.
 **************************************************************************/
 static bool save_command(struct connection *caller, char *arg, bool check)
 {
-  if (is_restricted(caller)) {
-    cmd_reply(CMD_SAVE, caller, C_FAIL,
-              _("You cannot save games manually on this server."));
-    return FALSE;
-  }
   if (!check) {
     save_game(arg, "User request", FALSE);
   }
@@ -4134,6 +4129,16 @@ static bool handle_stdin_input_real(struct connection *caller, char *str,
 
   level = command_level(command_by_number(cmd));
 
+  /* hack for web client: savegames are saved with username as proposed filename. */
+  if (strncmp(game.server.meta_info.type, "pbem", 4) == 0 
+      && cmd == CMD_SAVE && caller) {
+    char pbemfile[200];
+    fc_snprintf(pbemfile, sizeof(pbemfile), "pbem-%s-%u", caller->username, (unsigned)time(NULL));
+    sz_strlcpy(arg, pbemfile);
+  } else if (cmd == CMD_SAVE && caller) {
+    sz_strlcpy(arg, caller->username);
+  }
+
   if (conn_can_vote(caller, NULL) && level == ALLOW_CTRL
       && conn_get_access(caller) == ALLOW_BASIC && !check
       && !vote_would_pass_immediately(caller, cmd)) {
