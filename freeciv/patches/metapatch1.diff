diff -Nurd -X.diff_ignore freeciv/common/game.h freeciv/common/game.h
--- freeciv/common/game.h	2012-07-18 01:55:34.000000000 +0300
+++ freeciv/common/game.h	2012-07-18 02:25:46.000000000 +0300
@@ -220,6 +220,7 @@
       struct {
         bool user_message_set;
         char user_message[256];
+	char topic[256];
       } meta_info;
 
       int first_timeout;
diff -Nurd -X.diff_ignore freeciv/common/packets.def freeciv/common/packets.def
--- freeciv/common/packets.def	2012-07-18 02:20:34.000000000 +0300
+++ freeciv/common/packets.def	2012-07-18 02:25:46.000000000 +0300
@@ -1309,12 +1309,12 @@
   STRING rule_name[MAX_LEN_NAME];
   STRING graphic_str[MAX_LEN_NAME];
   STRING graphic_alt[MAX_LEN_NAME];
-  UINT8 reqs_count;
+  UINT32 reqs_count;
   REQUIREMENT reqs[MAX_NUM_REQS:reqs_count];
   TECH obsolete_by;
   IMPROVEMENT replaced_by;
-  UINT16 build_cost;
-  UINT8 upkeep, sabotage;
+  UINT32 build_cost;
+  UINT32 upkeep, sabotage;
   BV_IMPR_FLAGS flags;
   STRING soundtag[MAX_LEN_NAME];
   STRING soundtag_alt[MAX_LEN_NAME];
diff -Nurd -X.diff_ignore freeciv/server/civserver.c freeciv/server/civserver.c
--- freeciv/server/civserver.c	2012-07-18 01:55:00.000000000 +0300
+++ freeciv/server/civserver.c	2012-07-18 02:29:44.000000000 +0300
@@ -248,6 +248,8 @@
       srvarg.bind_addr = option; /* Never freed. */
     } else if ((option = get_option_malloc("--Bind-meta", argv, &inx, argc))) {
       srvarg.bind_meta_addr = option; /* Never freed. */
+    } else if ((option = get_option_malloc("--topic", argv, &inx, argc))) {
+      sz_strlcpy(game.server.meta_info.topic, option);
     } else if ((option = get_option_malloc("--read", argv, &inx, argc)))
       srvarg.script_filename = option; /* Never freed. */
     else if ((option = get_option_malloc("--quitidle", argv, &inx, argc))) {
@@ -381,6 +383,8 @@
                 _("Read startup script FILE"));
     cmdhelp_add(help, "R", "Ranklog FILE",
                 _("Use FILE as ranking logfile"));
+    cmdhelp_add(help, "t", _("topic MESSAGE"),
+                _("Set the metaserver topic to MESSAGE"));
 #ifdef AI_MODULES
     cmdhelp_add(help, "L", "LoadAI MODULE",
                 _("Load ai module MODULE. Can appear multiple times"));
diff -Nurd -X.diff_ignore freeciv/server/meta.c freeciv/server/meta.c
--- freeciv/server/meta.c	2012-07-18 01:55:00.000000000 +0300
+++ freeciv/server/meta.c	2012-07-18 02:25:46.000000000 +0300
@@ -112,6 +112,12 @@
   return meta_message;
 }
 
+const char *get_meta_topic_string(void)
+{
+  return game.server.meta_info.topic;
+}
+
+
 /*************************************************************************
  The metaserver message set by user
 *************************************************************************/
@@ -278,6 +284,8 @@
   if (flag == META_GOODBYE) {
     netfile_add_form_int(post, "bye", 1);
   } else {
+    netfile_add_form_str(post, "topic",
+                         get_meta_topic_string());
     netfile_add_form_str(post, "version", VERSION_STRING);
     netfile_add_form_str(post, "patches",
                          get_meta_patches_string());
@@ -316,6 +324,10 @@
                              fc_url_encode(plr->nation != NO_NATION_SELECTED 
                                            ? nation_plural_for_player(plr)
                                            : "none"));
+        netfile_add_form_str(post, "pln[]",
+                             fc_url_encode(plr->nation != NO_NATION_SELECTED 
+                                           ? nation_of_player(plr)->flag_graphic_str
+                                           : "none"));
         netfile_add_form_str(post, "plh[]",
                              pconn ? pconn->addr : "");
 
diff -Nurd -X.diff_ignore freeciv/server/meta.h freeciv/server/meta.h
--- freeciv/server/meta.h	2012-07-18 02:25:44.000000000 +0300
+++ freeciv/server/meta.h	2012-07-18 02:25:46.000000000 +0300
@@ -32,6 +32,7 @@
 const char *get_meta_patches_string(void);
 const char *get_meta_message_string(void);
 const char *get_user_meta_message_string(void);
+const char *get_meta_topic_string(void);
 
 void maybe_automatic_meta_message(const char *automatic);
 
