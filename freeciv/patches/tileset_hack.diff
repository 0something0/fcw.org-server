Index: client/tilespec.c
===================================================================
--- client/tilespec.c	(revisjon 16401)
+++ client/tilespec.c	(arbeidskopi)
@@ -2832,10 +2831,20 @@
 
   /* Set up each layer of the drawing. */
   for (l = 0; l < draw->num_layers; l++) {
+
+
     struct drawing_layer *dlp = &draw->layer[l];
     struct tileset_layer *tslp = &t->layers[l];
     sprite_vector_init(&dlp->base);
 
+    printf("\"l%d.%s\":{\"match_style\":%d,\"sprite_type\":%d,\"mine_tag\":\"%s\",\"match_indices\":%d,\"match_index\":[",l,
+		 draw->name,  dlp->match_style,dlp->sprite_type, draw->mine_tag, dlp->match_indices);
+    int sx;
+    for (sx = 0; sx < dlp->match_indices; sx++) {
+      printf("%d",dlp->match_index[sx]);
+      if (sx < dlp->match_indices - 1) printf(",");
+    }
+    printf("]},\n");
     switch (dlp->sprite_type) {
     case CELL_WHOLE:
       switch (dlp->match_style) {
@@ -2999,6 +3008,7 @@
 			  tslp->match_types[s][0],
 			  tslp->match_types[w][0]);
 	      sprite = load_sprite(t, buffer);
+              printf("\"%s.%d\":\"%s\",\n", draw->name, i, buffer);
 
 	      if (sprite) {
 		/* Crop the sprite to separate this cell. */
@@ -3954,6 +3964,7 @@
 	      int k = 0;
 	      for (; k < count; k++) {
 		n[j] = k; /* default to last entry */
+                printf("%d - %d \n", m[j], dlp->match_index[k]);
 		if (m[j] == dlp->match_index[k])
 		{
 		  break;
@@ -3967,7 +3978,7 @@
 	  break;
 	};
 	array_index = array_index * NUM_CORNER_DIRS + i;
-
+        printf("array_index: %d \n", array_index);
 	s = dlp->cells[array_index];
 	if (s) {
 	  ADD_SPRITE(s, TRUE, x, y);
