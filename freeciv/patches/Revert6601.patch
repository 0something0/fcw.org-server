diff -Nurd -X.diff_ignore freeciv/common/fc_types.h freeciv/common/fc_types.h
--- freeciv/common/fc_types.h	2016-02-24 04:41:27.627083803 +0200
+++ freeciv/common/fc_types.h	2016-02-24 04:42:12.390983506 +0200
@@ -695,19 +695,6 @@
 #define SPECENUM_COUNT MOOD_COUNT
 #include "specenum_gen.h"
 
-/* Used in the network protocol. */
-#define SPECENUM_NAME action_decision
-/* Don't want the player to decide what action to take. */
-#define SPECENUM_VALUE0 ACT_DEC_NOTHING
-#define SPECENUM_VALUE0NAME N_("nothing")
-/* Wants a decision because of something done to the actor. */
-#define SPECENUM_VALUE1 ACT_DEC_PASSIVE
-#define SPECENUM_VALUE1NAME N_("passive")
-/* Wants a decision because of something the actor did. */
-#define SPECENUM_VALUE2 ACT_DEC_ACTIVE
-#define SPECENUM_VALUE2NAME N_("active")
-#include "specenum_gen.h"
-
 #ifdef __cplusplus
 }
 #endif /* __cplusplus */
diff -Nurd -X.diff_ignore freeciv/common/packets.def freeciv/common/packets.def
--- freeciv/common/packets.def	2016-02-24 04:41:27.627083803 +0200
+++ freeciv/common/packets.def	2016-02-24 04:42:12.390983506 +0200
@@ -241,7 +241,6 @@
 type RDIR               = uint8(enum route_direction)
 type MOVE_MODE          = uint8(enum road_move_mode)
 type GEN_ACTION         = uint8(enum gen_action)
-type ACTION_DECISION    = uint8(enum action_decision)
 type REVOLENTYPE        = uint8(enum revolen_type)
 type HAPPYBORDERSTYPE   = uint8(enum happyborders_type)
 type TECH_COST_STYLE    = uint8(enum tech_cost_style)
@@ -928,9 +927,6 @@
   ACTIVITY orders_activities[MAX_LEN_ROUTE:orders_length];
   ACTION_TGT orders_targets[MAX_LEN_ROUTE:orders_length];
   GEN_ACTION orders_actions[MAX_LEN_ROUTE:orders_length];
-
-  ACTION_DECISION action_decision_want;
-  TILE action_decision_tile;
 end
 
 PACKET_UNIT_SHORT_INFO = 64; sc, lsend, is-game-info, force, cancel(PACKET_UNIT_INFO)
@@ -1040,6 +1036,13 @@
   GEN_ACTION action_type;
 end
 
+PACKET_UNIT_ACTOR_WANTS_INPUT = 86; sc, dsend, lsend
+  UNIT diplomat_id;
+  TILE target_tile_id;
+
+  BOOL is_arrival;
+end
+
 PACKET_UNIT_GET_ACTIONS = 87; cs, handle-per-conn, dsend
   UNIT actor_unit_id;
   UNIT target_unit_id;
diff -Nurd -X.diff_ignore freeciv/common/unit.c freeciv/common/unit.c
--- freeciv/common/unit.c	2016-02-24 04:41:27.627083803 +0200
+++ freeciv/common/unit.c	2016-02-24 04:42:12.622982986 +0200
@@ -1748,9 +1748,6 @@
   punit->battlegroup = BATTLEGROUP_NONE;
   punit->has_orders = FALSE;
 
-  punit->action_decision_want = ACT_DEC_NOTHING;
-  punit->action_decision_tile = NULL;
-
   if (is_server()) {
     punit->server.debug = FALSE;
     punit->server.birth_turn = game.info.turn;
diff -Nurd -X.diff_ignore freeciv/common/unit.h freeciv/common/unit.h
--- freeciv/common/unit.h	2016-02-24 04:41:27.627083803 +0200
+++ freeciv/common/unit.h	2016-02-24 04:42:12.622982986 +0200
@@ -169,10 +169,6 @@
     struct unit_order *list;
   } orders;
 
-  /* The unit may want the player to choose an action. */
-  enum action_decision action_decision_want;
-  struct tile *action_decision_tile;
-
   union {
     struct {
       /* Only used at the client (the server is omniscient; ./client/). */
diff -Nurd -X.diff_ignore freeciv/server/unithand.c freeciv/server/unithand.c
--- freeciv/server/unithand.c	2016-02-24 04:41:27.639083775 +0200
+++ freeciv/server/unithand.c	2016-02-24 04:42:12.622982986 +0200
@@ -908,18 +908,6 @@
   actor_unit = game_unit_by_number(actor_unit_id);
   target_tile = index_to_tile(target_tile_id);
 
-  if (disturb_player
-      && actor_unit
-      && actor_unit->action_decision_want
-      && actor_unit->action_decision_tile == target_tile) {
-    /* The client has now asked for alternatives to show the player. */
-    actor_unit->action_decision_want = ACT_DEC_NOTHING;
-    actor_unit->action_decision_tile = NULL;
-
-    /* Let the client know so future changes are seen as changes. */
-    send_unit_info(player_reply_dest(actor_player), actor_unit);
-  }
-
   /* Check if the request is valid. */
   if (!target_tile || !actor_unit || !actor_player
       || actor_unit->owner != actor_player) {
@@ -2976,13 +2964,18 @@
           return FALSE;
         }
 
-        punit->action_decision_want = ACT_DEC_ACTIVE;
-        punit->action_decision_tile = pdesttile;
-
-        /* Let the client know that this unit needs the player to decide
-         * what to do. */
+        /* If we didn't send_unit_info the client would sometimes
+         * think that the diplomat didn't have any moves left and so
+         * don't pop up the box.  (We are in the middle of the unit
+         * restore cycle when doing goto's, and the unit's movepoints
+         * have been restored, but we only send the unit info at the
+         * end of the function.) */
         send_unit_info(player_reply_dest(pplayer), punit);
 
+        dlsend_packet_unit_actor_wants_input(player_reply_dest(pplayer),
+                                             punit->id,
+                                             pdesttile->index,
+                                             FALSE);
         return FALSE;
       } else if (!may_non_act_move(punit, pcity, pdesttile, igzoc)) {
         /* No action can be done. No regular move can be done. Attack isn't
diff -Nurd -X.diff_ignore freeciv/server/unittools.c freeciv/server/unittools.c
--- freeciv/server/unittools.c	2016-02-24 04:41:27.639083775 +0200
+++ freeciv/server/unittools.c	2016-02-24 04:42:12.622982986 +0200
@@ -2318,11 +2318,6 @@
     packet->orders_repeat = packet->orders_vigilant = FALSE;
     /* No need to initialize array. */
   }
-
-  packet->action_decision_want = punit->action_decision_want;
-  packet->action_decision_tile = (punit->action_decision_tile
-                                  ? tile_index(punit->action_decision_tile)
-                                  : IDENTITY_NUMBER_ZERO);
 }
 
 /**************************************************************************
@@ -3714,12 +3709,9 @@
       if (action_tgt_city(act_unit, pdesttile, FALSE)) {
         /* There is a valid target. */
 
-        act_unit->action_decision_want = ACT_DEC_PASSIVE;
-        act_unit->action_decision_tile = pdesttile;
-
-        /* Let the client know that this unit wants the player to decide
-         * what to do. */
-        send_unit_info(player_reply_dest(act_player), act_unit);
+        dlsend_packet_unit_actor_wants_input(
+              player_reply_dest(act_player), act_unit->id,
+              pdesttile->index, TRUE);
       }
     } unit_move_data_list_iterate_end;
   }
