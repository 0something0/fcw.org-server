From e31a2d97454785b1c5dbd7246b4acda9cbbd92ab Mon Sep 17 00:00:00 2001
From: Sveinung Kvilhaugsvik <sveinung84@users.sourceforge.net>
Date: Fri, 26 Sep 2014 18:15:34 +0200
Subject: [PATCH 1/2] Add effects regulating the "Steal Gold" unit action.

Max_Stolen_Gold_Pct regulates the upper limit on how large a fraction may be
stolen. Thiefs_Share_Pct regulates how much of what was stolen is lost
before it reaches the player ordering it.
---
 ai/default/daieffects.c |  6 ++++++
 common/effects.h        |  4 ++++
 doc/README.effects      | 10 ++++++++++
 server/diplomats.c      | 15 ++++++---------
 4 files changed, 26 insertions(+), 9 deletions(-)

diff --git a/ai/default/daieffects.c b/ai/default/daieffects.c
index 4126f07..691df88 100644
--- a/ai/default/daieffects.c
+++ b/ai/default/daieffects.c
@@ -573,6 +573,12 @@ int dai_effect_value(struct player *pplayer, struct government *gov,
       }
     }
     break;
+  case EFT_MAX_STOLEN_GOLD_PCT:
+    v -= amount / 4;
+    break;
+  case EFT_THIEFS_SHARE_PCT:
+    v -= amount / 8;
+    break;
   case EFT_COUNT:
     log_error("Bad effect type.");
     break;
diff --git a/common/effects.h b/common/effects.h
index fde754e..9864cc6 100644
--- a/common/effects.h
+++ b/common/effects.h
@@ -265,6 +265,10 @@ extern "C" {
 #define SPECENUM_VALUE101NAME "National_History"
 #define SPECENUM_VALUE102 EFT_TURN_FRAGMENTS
 #define SPECENUM_VALUE102NAME "Turn_Fragments"
+#define SPECENUM_VALUE103 EFT_MAX_STOLEN_GOLD_PCT
+#define SPECENUM_VALUE103NAME "Max_Stolen_Gold_Pct"
+#define SPECENUM_VALUE104 EFT_THIEFS_SHARE_PCT
+#define SPECENUM_VALUE104NAME "Thiefs_Share_Pct"
 /* keep this last */
 #define SPECENUM_COUNT EFT_COUNT
 #include "specenum_gen.h"
diff --git a/doc/README.effects b/doc/README.effects
index fa49e24..b314cbb 100644
--- a/doc/README.effects
+++ b/doc/README.effects
@@ -219,6 +219,16 @@ Unit_Bribe_Cost_Pct
     Increases unit bribe cost by amount percent. Requirements are from the
 point of view of the target unit, not the briber.
 
+Max_Stolen_Gold_Pct
+    The upper limit on the percentage of the players gold that may be
+stolen by a unit doing the "Steal Gold" action. Evaluated against the city
+stolen from.
+
+Thiefs_Share_Pct
+    The percentage of the gold stolen by a unit doing the "Steal Gold"
+action that is lost before it reaches the player ordering it. Evaluated
+against the actor unit.
+
 Size_Adj
     Increase maximum size of a city by amount.
 
diff --git a/server/diplomats.c b/server/diplomats.c
index 58b23c3..0e86e9a 100644
--- a/server/diplomats.c
+++ b/server/diplomats.c
@@ -45,13 +45,6 @@
 #include "unithand.h"
 #include "unittools.h"
 
-/*************************************************************************/
-
-/* TODO: Should be an effect */
-#define STEAL_GOLD_PCT 5
-/* TODO: Should be an effect */
-#define THIEFS_SHARE_PCT 1
-
 /****************************************************************************/
 
 static void diplomat_charge_movement (struct unit *pdiplomat,
@@ -1145,7 +1138,9 @@ void spy_steal_gold(struct player *act_player, struct unit *act_unit,
   log_debug("steal gold: succeeded");
 
   /* Decide the upper limit on how much can be taken. */
-  gold_take = (tgt_player->economic.gold * STEAL_GOLD_PCT) / 100;
+  gold_take = (tgt_player->economic.gold
+               * get_city_bonus(tgt_city, EFT_MAX_STOLEN_GOLD_PCT))
+              / 100;
 
   /* Decide how much to actually take. */
   gold_take = fc_rand(gold_take) + 1;
@@ -1156,7 +1151,9 @@ void spy_steal_gold(struct player *act_player, struct unit *act_unit,
   tgt_player->economic.gold -= gold_take;
 
   /* Some gold are lost during transfer. */
-  gold_give = gold_take - (gold_take * THIEFS_SHARE_PCT) / 100;
+  gold_give = gold_take
+            - (gold_take * get_unit_bonus(act_unit, EFT_THIEFS_SHARE_PCT))
+              / 100;
 
   log_debug("steal gold: will give %d gold", gold_give);
 
-- 
2.1.0

