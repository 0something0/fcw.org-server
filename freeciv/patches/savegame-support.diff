diff -Nurd -X.diff_ignore freeciv/common/game.c freeciv/common/game.c
--- freeciv/common/game.c	2012-08-08 00:18:50.000000000 +0300
+++ freeciv/common/game.c	2012-08-08 01:19:11.000000000 +0300
@@ -730,6 +730,13 @@
     cf_int_seq('Y', game.info.year),
     cf_end()
   };
+  time_t     now;
+  struct tm  *ts;
+  char buff[80];
+
+  now = time(0); 
+  ts = localtime(&now);
+  strftime(buff, sizeof(buff), "%Y-%m-%d-%H-%M-%S", ts);
 
   fc_vsnprintcf(buf, buflen, format, sequences, -1);
 
@@ -738,8 +745,8 @@
      * printf information. */
     char savename[512];
 
-    fc_snprintf(savename, sizeof(savename), "%s-T%%04T-Y%%05Y-%%R",
-                format);
+    fc_snprintf(savename, sizeof(savename), "%s-T%%04T-Y%%05Y-%%R-%s",
+                format, buff);
     fc_vsnprintcf(buf, buflen, savename, sequences, -1);
   }
 
diff -Nurd -X.diff_ignore freeciv/configure.ac freeciv/configure.ac
--- freeciv/configure.ac	2012-08-08 00:50:09.000000000 +0300
+++ freeciv/configure.ac	2012-08-08 01:19:11.000000000 +0300
@@ -1127,7 +1127,7 @@
   DEFAULT_SCENARIO_PATH=".;data/scenarios;~/.freeciv/$DATASUBDIR/scenarios;~/.freeciv/scenarios;$datadir/freeciv/scenarios"
 else
   DEFAULT_DATA_PATH=".:data:~/.freeciv/$DATASUBDIR:$datadir/freeciv"
-  DEFAULT_SAVE_PATH=".:~/.freeciv/saves"
+  DEFAULT_SAVE_PATH=".:~/.freeciv/saves:/mnt/savegames"
   DEFAULT_SCENARIO_PATH=".:data/scenarios:~/.freeciv/$DATASUBDIR/scenarios:~/.freeciv/scenarios:$datadir/freeciv/scenarios"
 fi
 CPPFLAGS="$CPPFLAGS -DFC_CONF_PATH=\"\\\"$FC_CONF_PATH\\\"\""
diff -Nurd -X.diff_ignore freeciv/server/commands.c freeciv/server/commands.c
--- freeciv/server/commands.c	2012-08-08 00:18:29.000000000 +0300
+++ freeciv/server/commands.c	2012-08-08 01:19:11.000000000 +0300
@@ -529,7 +529,7 @@
       "all cities and units etc. Use with care!"), NULL,
    CMD_ECHO_ALL, VCF_NONE, 50
   },
-  {"save",	ALLOW_ADMIN,
+  {"save",	ALLOW_CTRL,
    /* TRANS: translate text between <> only */
    N_("save\n"
       "save <file-name>"),
diff -Nurd -X.diff_ignore freeciv/server/meta.h freeciv/server/meta.h
--- freeciv/server/meta.h	2012-08-08 01:10:49.000000000 +0300
+++ freeciv/server/meta.h	2012-08-08 01:19:11.000000000 +0300
@@ -17,7 +17,7 @@
 
 #define DEFAULT_META_SERVER_NO_SEND  TRUE
 #define DEFAULT_META_SERVER_ADDR     META_URL /* config.h */
-#define METASERVER_REFRESH_INTERVAL   (60)
+#define METASERVER_REFRESH_INTERVAL   (20)
 #define METASERVER_MIN_UPDATE_INTERVAL 7   /* not too short, not too long */
 
 enum meta_flag {
diff -Nurd -X.diff_ignore freeciv/server/savegame.c freeciv/server/savegame.c
--- freeciv/server/savegame.c	2012-08-08 00:18:29.000000000 +0300
+++ freeciv/server/savegame.c	2012-08-08 01:19:11.000000000 +0300
@@ -447,8 +447,12 @@
     break;
   }
 
+  /* FIXME: Should not get here! */
+#if 0
   fc_assert(FALSE);
   return '?';
+#endif
+  return 'a';
 }
 
 /****************************************************************************
diff -Nurd -X.diff_ignore freeciv/server/srv_main.c freeciv/server/srv_main.c
--- freeciv/server/srv_main.c	2012-08-08 00:18:29.000000000 +0300
+++ freeciv/server/srv_main.c	2012-08-08 01:20:33.000000000 +0300
@@ -1144,7 +1144,7 @@
 Note that if !HAVE_LIBZ, then game.server.save_compress_level should never
 become non-zero, so no need to check HAVE_LIBZ explicitly here as well.
 **************************************************************************/
-void save_game(const char *orig_filename, const char *save_reason,
+void save_game(const char *username, const char *save_reason,
                bool scenario)
 {
   char filepath[600];
@@ -1152,11 +1152,11 @@
   struct section_file *file;
   struct timer *timer_cpu, *timer_user;
 
-  if (!orig_filename) {
-    filepath[0] = '\0';
-    filename = filepath;
+  if (!username) {
+    con_write(C_FAIL, _("Failed saving game. Missing filename."));
+    return;
   } else {
-    sz_strlcpy(filepath, orig_filename);
+    sz_strlcpy(filepath, username);
     if ((filename = strrchr(filepath, '/'))) {
       filename++;
     } else {
@@ -1189,12 +1189,9 @@
     }
   }
 
-  /* If orig_filename is NULL or empty, use a generated default name. */
-  if (filename[0] == '\0'){
-    /* manual save */
-    generate_save_name(game.server.save_name, filename,
-                       sizeof(filepath) + filepath - filename, "manual");
-  }
+  /* manual save */
+  generate_save_name(game.server.save_name, filepath,
+                     sizeof(filepath), "manual");
 
   timer_cpu = new_timer_start(TIMER_CPU, TIMER_ACTIVE);
   timer_user = new_timer_start(TIMER_USER, TIMER_ACTIVE);
@@ -1244,12 +1241,12 @@
 
     if (!scenario) {
       /* Ensure the saves directory exists. */
-      make_dir(srvarg.saves_pathname);
+/*      make_dir(srvarg.saves_pathname); */
 
       sz_strlcpy(tmpname, srvarg.saves_pathname);
     } else {
       /* Make sure scenario directory exist */
-      make_dir(srvarg.scenarios_pathname);
+/*      make_dir(srvarg.scenarios_pathname); */
 
       sz_strlcpy(tmpname, srvarg.scenarios_pathname);
     }
@@ -1257,7 +1254,14 @@
     if (tmpname[0] != '\0') {
       sz_strlcat(tmpname, "/");
     }
+    sz_strlcat(tmpname, username);
+    sz_strlcat(tmpname, "/");
+
+    /* Ensure the saves directory exists. */
+    make_dir(tmpname);
+
     sz_strlcat(tmpname, filepath);
+
     sz_strlcpy(filepath, tmpname);
   }
 
diff -Nurd -X.diff_ignore freeciv/server/stdinhand.c freeciv/server/stdinhand.c
--- freeciv/server/stdinhand.c	2012-08-08 00:18:29.000000000 +0300
+++ freeciv/server/stdinhand.c	2012-08-08 01:31:01.000000000 +0300
@@ -37,6 +37,7 @@
 #include "mem.h"
 #include "registry.h"
 #include "shared.h"
+#include "string_vector.h"
 #include "support.h"            /* fc__attribute, bool type, etc. */
 #include "timing.h"
 
@@ -735,11 +736,6 @@
 **************************************************************************/
 static bool save_command(struct connection *caller, char *arg, bool check)
 {
-  if (is_restricted(caller)) {
-    cmd_reply(CMD_SAVE, caller, C_FAIL,
-              _("You cannot save games manually on this server."));
-    return FALSE;
-  }
   if (!check) {
     save_game(arg, "User request", FALSE);
   }
@@ -3603,24 +3599,33 @@
   {
     /* it is a normal savegame or maybe a scenario */
     char testfile[MAX_LEN_PATH];
-    const struct strvec *pathes[] = {
-      get_save_dirs(), get_scenario_dirs(), NULL
-    };
+    char usrdir[MAX_LEN_PATH];
+
+    fc_snprintf(usrdir, sizeof(usrdir), "%s/", 
+		caller->username);
+
+    const char *pathes[] = { "", usrdir, "scenario/", NULL };
+    int elems;
     const char *exts[] = {
       "sav", "gz", "bz2", "sav.gz", "sav.bz2", NULL
     };
+    struct strvec *sv;
     const char **ext, *found = NULL;
-    const struct strvec **path;
 
-    for (path = pathes; !found && *path; path++) {
-      for (ext = exts; !found && *ext; ext++) {
-        fc_snprintf(testfile, sizeof(testfile), "%s.%s", filename, *ext);
-        if ((found = fileinfoname(*path, testfile))) {
-          sz_strlcpy(arg, found);
-        }
+    for (elems = 0; pathes[elems] != NULL; elems++);
+
+    sv = strvec_new();
+    strvec_store(sv, pathes, elems);
+ 
+    for (ext = exts; !found && *ext; ext++) {
+      fc_snprintf(testfile, sizeof(testfile), "%s.%s", filename, *ext);
+      if ((found = fileinfoname(sv, testfile))) {
+        sz_strlcpy(arg, found);
       }
     }
 
+    strvec_destroy(sv);
+
     if (is_restricted(caller) && !found) {
       cmd_reply(CMD_LOAD, caller, C_FAIL, _("Cannot find savegame or "
                 "scenario with the name \"%s\"."), filename);
@@ -4145,6 +4150,11 @@
 
   level = command_level(command_by_number(cmd));
 
+  /* hack for web client: savegames are saved with username as proposed filename. */
+  if (cmd == CMD_SAVE && caller) {
+    sz_strlcpy(allargs, caller->username);
+  }
+
   if (conn_can_vote(caller, NULL) && level == ALLOW_CTRL
       && conn_get_access(caller) == ALLOW_BASIC && !check) {
     struct vote *vote;
