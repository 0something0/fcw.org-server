*************** struct color_system *color_system_read(struct section_file *file)
*** 107,120 ****
    int i;
    struct color_system *colors = fc_malloc(sizeof(*colors));
  
    assert(ARRAY_SIZE(color_names) == COLOR_LAST);
    for (i = 0; i < COLOR_LAST; i++) {
      if (!secfile_lookup_int(file, &colors->colors[i].r,
-                             "colors.%s0.r", color_names[i])
          || !secfile_lookup_int(file, &colors->colors[i].g,
-                                "colors.%s0.g", color_names[i])
          || !secfile_lookup_int(file, &colors->colors[i].b,
-                                "colors.%s0.b", color_names[i])) {
        log_error("Color %s: %s", color_names[i], secfile_error());
        colors->colors[i].r = 0;
        colors->colors[i].g = 0;
--- 107,121 ----
    int i;
    struct color_system *colors = fc_malloc(sizeof(*colors));
  
+   /* game colors */
    assert(ARRAY_SIZE(color_names) == COLOR_LAST);
    for (i = 0; i < COLOR_LAST; i++) {
      if (!secfile_lookup_int(file, &colors->colors[i].r,
+                             "gamecolors.%s0.r", color_names[i])
          || !secfile_lookup_int(file, &colors->colors[i].g,
+                                "gamecolors.%s0.g", color_names[i])
          || !secfile_lookup_int(file, &colors->colors[i].b,
+                                "gamecolors.%s0.b", color_names[i])) {
        log_error("Color %s: %s", color_names[i], secfile_error());
        colors->colors[i].r = 0;
        colors->colors[i].g = 0;
*************** struct color_system *color_system_read(struct section_file *file)
*** 123,130 ****
      colors->colors[i].color = NULL;
    }
  
    for (i = 0; i < MAX_NUM_PLAYERS + MAX_NUM_BARBARIANS; i++) {
-     if (NULL == secfile_entry_lookup(file, "colors.player%d.r", i)) {
        break;
      }
    }
--- 124,132 ----
      colors->colors[i].color = NULL;
    }
  
+   /* player colors */
    for (i = 0; i < MAX_NUM_PLAYERS + MAX_NUM_BARBARIANS; i++) {
+     if (NULL == secfile_entry_lookup(file, "playercolors.player%d.r", i)) {
        break;
      }
    }
*************** struct color_system *color_system_read(struct section_file *file)
*** 133,139 ****
  				    * sizeof(*colors->player_colors));
    if (i == 0) {
      /* Use a simple fallback. */
-     log_error("Missing colors.player. See misc/colors.tilespec.");
      colors->player_colors[0].r = 128;
      colors->player_colors[0].g = 0;
      colors->player_colors[0].b = 0;
--- 135,141 ----
  				    * sizeof(*colors->player_colors));
    if (i == 0) {
      /* Use a simple fallback. */
+     log_error("Missing playercolors.player. See misc/playercolors.tilespec.");
      colors->player_colors[0].r = 128;
      colors->player_colors[0].g = 0;
      colors->player_colors[0].b = 0;
*************** struct color_system *color_system_read(struct section_file *file)
*** 142,150 ****
      for (i = 0; i < colors->num_player_colors; i++) {
        struct rgbcolor *rgb = &colors->player_colors[i];
  
-       if (!secfile_lookup_int(file, &rgb->r, "colors.player%d.r", i)
-           || !secfile_lookup_int(file, &rgb->g, "colors.player%d.g", i)
-           || !secfile_lookup_int(file, &rgb->b, "colors.player%d.b", i)) {
          log_error("Player color %d: %s", i, secfile_error());
          rgb->r = 0;
          rgb->g = 0;
--- 144,152 ----
      for (i = 0; i < colors->num_player_colors; i++) {
        struct rgbcolor *rgb = &colors->player_colors[i];
  
+       if (!secfile_lookup_int(file, &rgb->r, "playercolors.player%d.r", i)
+           || !secfile_lookup_int(file, &rgb->g, "playercolors.player%d.g", i)
+           || !secfile_lookup_int(file, &rgb->b, "playercolors.player%d.b", i)) {
          log_error("Player color %d: %s", i, secfile_error());
          rgb->r = 0;
          rgb->g = 0;
*************** struct color_system *color_system_read(struct section_file *file)
*** 157,172 ****
      struct rgbcolor *prgb;
      const char *key;
  
-     if (!secfile_lookup_int(file, &rgb.r, "colors.tiles%d.r", i)
-         || !secfile_lookup_int(file, &rgb.g, "colors.tiles%d.g", i)
-         || !secfile_lookup_int(file, &rgb.b, "colors.tiles%d.b", i)) {
        break;
      }
  
      prgb = fc_malloc(sizeof(*prgb));
      rgb.color = NULL;
      *prgb = rgb;
-     key = secfile_lookup_str(file, "colors.tiles%d.tag", i);
  
      if (NULL == key) {
        log_error("warning: tag for tiles %d: %s", i, secfile_error());
--- 160,175 ----
      struct rgbcolor *prgb;
      const char *key;
  
+     if (!secfile_lookup_int(file, &rgb.r, "terraincolors.tiles%d.r", i)
+         || !secfile_lookup_int(file, &rgb.g, "terraincolors.tiles%d.g", i)
+         || !secfile_lookup_int(file, &rgb.b, "terraincolors.tiles%d.b", i)) {
        break;
      }
  
      prgb = fc_malloc(sizeof(*prgb));
      rgb.color = NULL;
      *prgb = rgb;
+     key = secfile_lookup_str(file, "terraincolors.tiles%d.tag", i);
  
      if (NULL == key) {
        log_error("warning: tag for tiles %d: %s", i, secfile_error());
