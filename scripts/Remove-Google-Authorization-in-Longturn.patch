From e7244f474dc4fb7ea4a14db5d2169778858cb9ea Mon Sep 17 00:00:00 2001
From: Rhue <yoloswag6@protonmail.com>
Date: Sat, 10 Aug 2019 13:06:42 +0200
Subject: [PATCH] Remove google auth

---
 freeciv-proxy/freeciv-proxy.py                | 14 ++------------
 .../src/main/webapp/javascript/clinet.js      |  5 -----
 .../src/main/webapp/javascript/pregame.js     | 19 +++++++++++++------
 3 files changed, 15 insertions(+), 23 deletions(-)

diff --git a/freeciv-proxy/freeciv-proxy.py b/freeciv-proxy/freeciv-proxy.py
index 7e59ccf8..8b2659f2 100755
--- a/freeciv-proxy/freeciv-proxy.py
+++ b/freeciv-proxy/freeciv-proxy.py
@@ -143,19 +143,9 @@ class WSHandler(websocket.WebSocketHandler):
         cnx.close()
       return False
 
-    # Returns the auth method for this game
-    # Right now this is:
-    # - Google account for otpd if a client key is defined
-    # - password for any other case
+    # HAXXORZ now we only ask for the normal password
     def get_game_auth_method(self, cursor):
-        if google_signin is None or len(google_signin.strip()) == 0:
-            return "password"
-        query = ("select count(*) from servers where port=%(port)s and type='longturn'")
-        cursor.execute(query, {'port': self.civserverport})
-        if cursor.fetchall()[0][0] > 0:
-            return "google"
-        else:
-            return "password"
+        return "password"
 
     def check_user_password(self, cursor, username, password):
         query = ("select secure_hashed_password, CAST(ENCRYPT(%(pwd)s, secure_hashed_password) AS CHAR), activated from auth where lower(username)=lower(%(usr)s)")
diff --git a/freeciv-web/src/main/webapp/javascript/clinet.js b/freeciv-web/src/main/webapp/javascript/clinet.js
index 3f87497c..b13dd2bc 100644
--- a/freeciv-web/src/main/webapp/javascript/clinet.js
+++ b/freeciv-web/src/main/webapp/javascript/clinet.js
@@ -145,11 +145,6 @@ function check_websocket_ready()
       sha_password = encodeURIComponent(shaObj.getHash("HEX"));
     }
 
-    if (is_longturn() && google_user_token == null) {
-      swal("Login failed.");
-      return;
-    }
-
     var login_message = {"pid":4, "username" : username,
     "capability": freeciv_version, "version_label": "-dev",
     "major_version" : 2, "minor_version" : 5, "patch_version" : 99,
diff --git a/freeciv-web/src/main/webapp/javascript/pregame.js b/freeciv-web/src/main/webapp/javascript/pregame.js
index b07e725d..84173cc4 100644
--- a/freeciv-web/src/main/webapp/javascript/pregame.js
+++ b/freeciv-web/src/main/webapp/javascript/pregame.js
@@ -1324,8 +1324,19 @@ function show_longturn_intro_dialog() {
           }
         }
       },
-      buttons: []
-
+      buttons: [
+        {
+          text : "Join game",
+          click : function() {
+                    if (is_touch_device() || is_small_screen()) {
+                      BigScreen.toggle();
+                    }
+          dialog_close_trigger = "button";
+          validate_username_callback();
+        },
+        icons : { primary: "ui-icon-gear" }
+        }
+      ]
     });
 
   if (is_small_screen()) {
@@ -1361,10 +1372,6 @@ function validate_username_callback()
    url: "/validate_user?userstring=" + check_username,
    success: function(data, textStatus, request){
       if (data == "user_does_not_exist") {
-        if (is_longturn()) {
-          show_new_user_account_dialog();
-          return;
-        }
 
         if (validate_username()) {
           network_init();
-- 
2.17.1

